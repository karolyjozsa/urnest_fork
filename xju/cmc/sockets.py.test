#!/usr/bin/env python3

# Copyright (c) 2024 Trevor Taylor
# coding: utf-8
# 
# Permission to use, copy, modify, and/or distribute this software for
# any purpose with or without fee is hereby granted, provided that all
# copyright notices and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
import asyncio
from pathlib import Path

from xju.assert_ import Assert

from xju.cmc.sockets import (
    UnixAddressType,
    StreamSocketListener,
    StreamSocketConnection,
    ListenerBacklog
)

async def main():
    S = Path('temp-unix-socket')
    with StreamSocketListener(UnixAddressType(S), ListenerBacklog(1)) as listener:
        async with StreamSocketConnection(UnixAddressType(S)) as c1:
            try:
                async with StreamSocketConnection(UnixAddressType(S)) as c2:
                    pass
            except Exception as e:
                Assert(str(e)).contains('connection refused')  # backlog exceeded
            else:
                assert False
                pass
            async with StreamSocketConnection(listener) as c1s:
                Assert(c1.local_address)==S
                Assert(c1.remote_address)==S
                Assert(c1s.local_address)==S
                Assert(c1s.remote_address)==S
            pass
        pass
    try:
        with StreamSocketListener(UnixAddressType(Path('/dev/null')), ListenerBacklog(2)):
            pass
    except Exception as e:
        Assert(str(e)).contains('not a unix socket')
        pass
    pass
